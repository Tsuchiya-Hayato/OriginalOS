     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_corb_wp
     7 00000000                                 	EXTERN	_mmio
     8 00000000                                 	EXTERN	_memman_alloc_4k
     9 00000000                                 	EXTERN	_sprintf
    10 00000000                                 	EXTERN	_putfonts8_asc
    11 00000000                                 [FILE "h_audio.c"]
    12                                          [SECTION .data]
    13 00000000                                 	ALIGNB	4
    14 00000000                                 _mmio:
    15 00000000 FEBF0000                        	DD	-21037056
    16 00000004                                 	ALIGNB	4
    17 00000004                                 _corb_wp:
    18 00000004 00000001                        	DD	1
    19 00000008                                 	ALIGNB	4
    20 00000008                                 _speaker_node:
    21 00000008 FFFFFFFF                        	DD	-1
    22 0000000C                                 	ALIGNB	4
    23 0000000C                                 _pin_node:
    24 0000000C FFFFFFFF                        	DD	-1
    25                                          [SECTION .text]
    26 00000000                                 _corb_enqueue:
    27 00000000 A1 [00000004]                   	MOV	EAX,DWORD [_corb_wp]
    28 00000005 31 D2                           	XOR	EDX,EDX
    29 00000007 F7 35 [00000048]                	DIV	DWORD [_corb_num_entries]
    30 0000000D 55                              	PUSH	EBP
    31 0000000E A1 [00000050]                   	MOV	EAX,DWORD [_corb_buffer]
    32 00000013 89 E5                           	MOV	EBP,ESP
    33 00000015 57                              	PUSH	EDI
    34 00000016 56                              	PUSH	ESI
    35 00000017 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
    36 0000001A 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    37 0000001D C1 E7 1C                        	SAL	EDI,28
    38 00000020 53                              	PUSH	EBX
    39 00000021 C1 E1 14                        	SAL	ECX,20
    40 00000024 8B 5D 10                        	MOV	EBX,DWORD [16+EBP]
    41 00000027 C1 E3 08                        	SAL	EBX,8
    42 0000002A 09 CF                           	OR	EDI,ECX
    43 0000002C 09 DF                           	OR	EDI,EBX
    44 0000002E 0B 7D 14                        	OR	EDI,DWORD [20+EBP]
    45 00000031 89 3C 90                        	MOV	DWORD [EAX+EDX*4],EDI
    46 00000034 A1 [00000000]                   	MOV	EAX,DWORD [_mmio]
    47 00000039 FF 05 [00000004]                	INC	DWORD [_corb_wp]
    48 0000003F 66 89 50 48                     	MOV	WORD [72+EAX],DX
    49 00000043 89 D0                           	MOV	EAX,EDX
    50 00000045 5B                              	POP	EBX
    51 00000046 5E                              	POP	ESI
    52 00000047 5F                              	POP	EDI
    53 00000048 5D                              	POP	EBP
    54 00000049 C3                              	RET
    55 0000004A                                 _rirb_data:
    56 0000004A 55                              	PUSH	EBP
    57 0000004B 8B 15 [00000054]                	MOV	EDX,DWORD [_rirb_buffer]
    58 00000051 89 E5                           	MOV	EBP,ESP
    59 00000053 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    60 00000056 5D                              	POP	EBP
    61 00000057 8B 04 C2                        	MOV	EAX,DWORD [EDX+EAX*8]
    62 0000005A C3                              	RET
    63 0000005B                                 _run_command:
    64 0000005B 55                              	PUSH	EBP
    65 0000005C 89 E5                           	MOV	EBP,ESP
    66 0000005E FF 75 10                        	PUSH	DWORD [16+EBP]
    67 00000061 FF 75 0C                        	PUSH	DWORD [12+EBP]
    68 00000064 FF 75 08                        	PUSH	DWORD [8+EBP]
    69 00000067 6A 00                           	PUSH	0
    70 00000069 E8 FFFFFF92                     	CALL	_corb_enqueue
    71 0000006E 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
    72 00000074 89 C1                           	MOV	ECX,EAX
    73 00000076 83 C4 10                        	ADD	ESP,16
    74 00000079                                 L4:
    75 00000079 8A 42 5D                        	MOV	AL,BYTE [93+EDX]
    76 0000007C 83 E0 01                        	AND	EAX,1
    77 0000007F 84 C0                           	TEST	AL,AL
    78 00000081 74 F6                           	JE	L4
    79 00000083 8A 42 5D                        	MOV	AL,BYTE [93+EDX]
    80 00000086 83 E0 05                        	AND	EAX,5
    81 00000089 88 42 5D                        	MOV	BYTE [93+EDX],AL
    82 0000008C 89 4D 08                        	MOV	DWORD [8+EBP],ECX
    83 0000008F C9                              	LEAVE
    84 00000090 EB B8                           	JMP	_rirb_data
    85 00000092                                 	GLOBAL	_init_corb
    86 00000092                                 _init_corb:
    87 00000092 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
    88 00000098 55                              	PUSH	EBP
    89 00000099 89 E5                           	MOV	EBP,ESP
    90 0000009B 8A 42 4C                        	MOV	AL,BYTE [76+EDX]
    91 0000009E 83 C8 FD                        	OR	EAX,-3
    92 000000A1 88 42 4C                        	MOV	BYTE [76+EDX],AL
    93 000000A4 68 00001000                     	PUSH	4096
    94 000000A9 FF 75 08                        	PUSH	DWORD [8+EBP]
    95 000000AC C7 05 [00000048] 00000100       	MOV	DWORD [_corb_num_entries],256
    96 000000B6 E8 [00000000]                   	CALL	_memman_alloc_4k
    97 000000BB 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
    98 000000C1 A3 [00000050]                   	MOV	DWORD [_corb_buffer],EAX
    99 000000C6 89 42 40                        	MOV	DWORD [64+EDX],EAX
   100 000000C9 C1 E8 1F                        	SHR	EAX,31
   101 000000CC 89 42 44                        	MOV	DWORD [68+EDX],EAX
   102 000000CF 66 C7 42 48 0000                	MOV	WORD [72+EDX],0
   103 000000D5 66 8B 42 4A                     	MOV	AX,WORD [74+EDX]
   104 000000D9 66 0D 8000                      	OR	AX,-32768
   105 000000DD 66 89 42 4A                     	MOV	WORD [74+EDX],AX
   106 000000E1 66 C7 42 4A 0000                	MOV	WORD [74+EDX],0
   107 000000E7 8A 42 4C                        	MOV	AL,BYTE [76+EDX]
   108 000000EA 83 C8 02                        	OR	EAX,2
   109 000000ED 88 42 4C                        	MOV	BYTE [76+EDX],AL
   110 000000F0 C9                              	LEAVE
   111 000000F1 C3                              	RET
   112 000000F2                                 	GLOBAL	_init_rirb
   113 000000F2                                 _init_rirb:
   114 000000F2 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   115 000000F8 55                              	PUSH	EBP
   116 000000F9 89 E5                           	MOV	EBP,ESP
   117 000000FB 8A 42 5C                        	MOV	AL,BYTE [92+EDX]
   118 000000FE 83 C8 FD                        	OR	EAX,-3
   119 00000101 88 42 5C                        	MOV	BYTE [92+EDX],AL
   120 00000104 68 00001000                     	PUSH	4096
   121 00000109 FF 75 08                        	PUSH	DWORD [8+EBP]
   122 0000010C C7 05 [0000004C] 00000100       	MOV	DWORD [_rirb_num_entries],256
   123 00000116 E8 [00000000]                   	CALL	_memman_alloc_4k
   124 0000011B 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   125 00000121 A3 [00000054]                   	MOV	DWORD [_rirb_buffer],EAX
   126 00000126 89 42 50                        	MOV	DWORD [80+EDX],EAX
   127 00000129 C1 E8 1F                        	SHR	EAX,31
   128 0000012C 89 42 54                        	MOV	DWORD [84+EDX],EAX
   129 0000012F 66 8B 42 58                     	MOV	AX,WORD [88+EDX]
   130 00000133 66 0D 8000                      	OR	AX,-32768
   131 00000137 66 89 42 58                     	MOV	WORD [88+EDX],AX
   132 0000013B 66 C7 42 58 0000                	MOV	WORD [88+EDX],0
   133 00000141 66 8B 42 5A                     	MOV	AX,WORD [90+EDX]
   134 00000145 83 C8 01                        	OR	EAX,1
   135 00000148 66 89 42 5A                     	MOV	WORD [90+EDX],AX
   136 0000014C 8A 42 5C                        	MOV	AL,BYTE [92+EDX]
   137 0000014F 83 C8 02                        	OR	EAX,2
   138 00000152 88 42 5C                        	MOV	BYTE [92+EDX],AL
   139 00000155 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   140 0000015B 8A 42 5C                        	MOV	AL,BYTE [92+EDX]
   141 0000015E 83 C8 01                        	OR	EAX,1
   142 00000161 88 42 5C                        	MOV	BYTE [92+EDX],AL
   143 00000164 C9                              	LEAVE
   144 00000165 C3                              	RET
   145                                          [SECTION .data]
   146 00000010                                 LC0:
   147 00000010 67 63 61 70 3A 20 25 78 00      	DB	"gcap: %x",0x00
   148 00000019                                 LC1:
   149 00000019 43 4F 52 42 53 49 5A 45 3A 20   	DB	"CORBSIZE: %x",0x00
       00000023 25 78 00 
   150 00000026                                 LC2:
   151 00000026 52 49 52 42 53 49 5A 45 3A 20   	DB	"RIRBSIZE: %x",0x00
       00000030 25 78 00 
   152 00000033                                 LC3:
   153 00000033 6D 65 6D 6F 72 79 20 73 69 7A   	DB	"memory size: %dKB",0x00
       0000003D 65 3A 20 25 64 4B 42 00 
   154                                          [SECTION .text]
   155 00000166                                 	GLOBAL	_hdaudio_test
   156 00000166                                 _hdaudio_test:
   157 00000166 55                              	PUSH	EBP
   158 00000167 89 E5                           	MOV	EBP,ESP
   159 00000169 56                              	PUSH	ESI
   160 0000016A 53                              	PUSH	EBX
   161 0000016B 83 C4 80                        	ADD	ESP,-128
   162 0000016E 8D 9D FFFFFF78                  	LEA	EBX,DWORD [-136+EBP]
   163 00000174 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   164 0000017A 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   165 0000017D 66 8B 02                        	MOV	AX,WORD [EDX]
   166 00000180 66 C1 E8 08                     	SHR	AX,8
   167 00000184 83 E0 0F                        	AND	EAX,15
   168 00000187 A3 [00000058]                   	MOV	DWORD [_iss],EAX
   169 0000018C 66 8B 02                        	MOV	AX,WORD [EDX]
   170 0000018F 66 C1 E8 0C                     	SHR	AX,12
   171 00000193 0F B7 C0                        	MOVZX	EAX,AX
   172 00000196 A3 [0000005C]                   	MOV	DWORD [_oss],EAX
   173 0000019B 66 8B 02                        	MOV	AX,WORD [EDX]
   174 0000019E 0F B7 C0                        	MOVZX	EAX,AX
   175 000001A1 50                              	PUSH	EAX
   176 000001A2 68 [00000010]                   	PUSH	LC0
   177 000001A7 53                              	PUSH	EBX
   178 000001A8 E8 [00000000]                   	CALL	_sprintf
   179 000001AD 53                              	PUSH	EBX
   180 000001AE 6A 07                           	PUSH	7
   181 000001B0 68 00000140                     	PUSH	320
   182 000001B5 6A 64                           	PUSH	100
   183 000001B7 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   184 000001BB 50                              	PUSH	EAX
   185 000001BC FF 76 08                        	PUSH	DWORD [8+ESI]
   186 000001BF E8 [00000000]                   	CALL	_putfonts8_asc
   187 000001C4 A1 [00000000]                   	MOV	EAX,DWORD [_mmio]
   188 000001C9 83 C4 24                        	ADD	ESP,36
   189 000001CC 8A 40 4E                        	MOV	AL,BYTE [78+EAX]
   190 000001CF 0F B6 C0                        	MOVZX	EAX,AL
   191 000001D2 50                              	PUSH	EAX
   192 000001D3 68 [00000019]                   	PUSH	LC1
   193 000001D8 53                              	PUSH	EBX
   194 000001D9 E8 [00000000]                   	CALL	_sprintf
   195 000001DE 53                              	PUSH	EBX
   196 000001DF 6A 07                           	PUSH	7
   197 000001E1 68 00000154                     	PUSH	340
   198 000001E6 6A 64                           	PUSH	100
   199 000001E8 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   200 000001EC 50                              	PUSH	EAX
   201 000001ED FF 76 08                        	PUSH	DWORD [8+ESI]
   202 000001F0 E8 [00000000]                   	CALL	_putfonts8_asc
   203 000001F5 A1 [00000000]                   	MOV	EAX,DWORD [_mmio]
   204 000001FA 83 C4 24                        	ADD	ESP,36
   205 000001FD 8A 40 5E                        	MOV	AL,BYTE [94+EAX]
   206 00000200 0F B6 C0                        	MOVZX	EAX,AL
   207 00000203 50                              	PUSH	EAX
   208 00000204 68 [00000026]                   	PUSH	LC2
   209 00000209 53                              	PUSH	EBX
   210 0000020A E8 [00000000]                   	CALL	_sprintf
   211 0000020F 53                              	PUSH	EBX
   212 00000210 6A 07                           	PUSH	7
   213 00000212 68 00000168                     	PUSH	360
   214 00000217 6A 64                           	PUSH	100
   215 00000219 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   216 0000021D 50                              	PUSH	EAX
   217 0000021E FF 76 08                        	PUSH	DWORD [8+ESI]
   218 00000221 E8 [00000000]                   	CALL	_putfonts8_asc
   219 00000226 83 C4 24                        	ADD	ESP,36
   220 00000229 68 00001000                     	PUSH	4096
   221 0000022E FF 75 0C                        	PUSH	DWORD [12+EBP]
   222 00000231 E8 [00000000]                   	CALL	_memman_alloc_4k
   223 00000236 6A 04                           	PUSH	4
   224 00000238 68 [00000033]                   	PUSH	LC3
   225 0000023D 53                              	PUSH	EBX
   226 0000023E E8 [00000000]                   	CALL	_sprintf
   227 00000243 53                              	PUSH	EBX
   228 00000244 6A 07                           	PUSH	7
   229 00000246 68 00000190                     	PUSH	400
   230 0000024B 6A 64                           	PUSH	100
   231 0000024D 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   232 00000251 50                              	PUSH	EAX
   233 00000252 FF 76 08                        	PUSH	DWORD [8+ESI]
   234 00000255 E8 [00000000]                   	CALL	_putfonts8_asc
   235 0000025A 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   236 0000025D 5B                              	POP	EBX
   237 0000025E 5E                              	POP	ESI
   238 0000025F 5D                              	POP	EBP
   239 00000260 C3                              	RET
   240                                          [SECTION .data]
   241 00000045 00 00 00                        	ALIGNB	4
   242 00000048                                 _corb_num_entries:
   243 00000048 00 00 00 00                     	RESB	4
   244                                          [SECTION .data]
   245 0000004C                                 	ALIGNB	4
   246 0000004C                                 _rirb_num_entries:
   247 0000004C 00 00 00 00                     	RESB	4
   248                                          [SECTION .data]
   249 00000050                                 	ALIGNB	4
   250 00000050                                 _corb_buffer:
   251 00000050 00 00 00 00                     	RESB	4
   252                                          [SECTION .data]
   253 00000054                                 	ALIGNB	4
   254 00000054                                 _rirb_buffer:
   255 00000054 00 00 00 00                     	RESB	4
   256                                          [SECTION .data]
   257 00000058                                 	ALIGNB	4
   258 00000058                                 _iss:
   259 00000058 00 00 00 00                     	RESB	4
   260                                          [SECTION .data]
   261 0000005C                                 	ALIGNB	4
   262 0000005C                                 _oss:
   263 0000005C 00 00 00 00                     	RESB	4
