     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_corb_wp
     7 00000000                                 	EXTERN	_mmio
     8 00000000                                 	EXTERN	_memman_alloc_4k
     9 00000000                                 	EXTERN	_sprintf
    10 00000000                                 	EXTERN	_putfonts8_asc
    11 00000000                                 [FILE "h_audio.c"]
    12                                          [SECTION .data]
    13 00000000                                 	ALIGNB	4
    14 00000000                                 _mmio:
    15 00000000 FEBF0000                        	DD	-21037056
    16 00000004                                 	ALIGNB	4
    17 00000004                                 _corb_wp:
    18 00000004 00000001                        	DD	1
    19 00000008                                 	ALIGNB	4
    20 00000008                                 _speaker_node:
    21 00000008 FFFFFFFF                        	DD	-1
    22 0000000C                                 	ALIGNB	4
    23 0000000C                                 _pin_node:
    24 0000000C FFFFFFFF                        	DD	-1
    25                                          [SECTION .text]
    26 00000000                                 _corb_enqueue:
    27 00000000 A1 [00000004]                   	MOV	EAX,DWORD [_corb_wp]
    28 00000005 31 D2                           	XOR	EDX,EDX
    29 00000007 F7 35 [00000048]                	DIV	DWORD [_corb_num_entries]
    30 0000000D 55                              	PUSH	EBP
    31 0000000E A1 [00000050]                   	MOV	EAX,DWORD [_corb_buffer]
    32 00000013 89 E5                           	MOV	EBP,ESP
    33 00000015 57                              	PUSH	EDI
    34 00000016 56                              	PUSH	ESI
    35 00000017 8B 7D 08                        	MOV	EDI,DWORD [8+EBP]
    36 0000001A 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    37 0000001D C1 E7 1C                        	SAL	EDI,28
    38 00000020 53                              	PUSH	EBX
    39 00000021 C1 E1 14                        	SAL	ECX,20
    40 00000024 8B 5D 10                        	MOV	EBX,DWORD [16+EBP]
    41 00000027 C1 E3 08                        	SAL	EBX,8
    42 0000002A 09 CF                           	OR	EDI,ECX
    43 0000002C 09 DF                           	OR	EDI,EBX
    44 0000002E 0B 7D 14                        	OR	EDI,DWORD [20+EBP]
    45 00000031 89 3C 90                        	MOV	DWORD [EAX+EDX*4],EDI
    46 00000034 A1 [00000000]                   	MOV	EAX,DWORD [_mmio]
    47 00000039 FF 05 [00000004]                	INC	DWORD [_corb_wp]
    48 0000003F 66 89 50 48                     	MOV	WORD [72+EAX],DX
    49 00000043 89 D0                           	MOV	EAX,EDX
    50 00000045 5B                              	POP	EBX
    51 00000046 5E                              	POP	ESI
    52 00000047 5F                              	POP	EDI
    53 00000048 5D                              	POP	EBP
    54 00000049 C3                              	RET
    55 0000004A                                 _rirb_data:
    56 0000004A 55                              	PUSH	EBP
    57 0000004B 8B 15 [00000054]                	MOV	EDX,DWORD [_rirb_buffer]
    58 00000051 89 E5                           	MOV	EBP,ESP
    59 00000053 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    60 00000056 5D                              	POP	EBP
    61 00000057 8B 04 C2                        	MOV	EAX,DWORD [EDX+EAX*8]
    62 0000005A C3                              	RET
    63 0000005B                                 _run_command:
    64 0000005B 55                              	PUSH	EBP
    65 0000005C 89 E5                           	MOV	EBP,ESP
    66 0000005E FF 75 10                        	PUSH	DWORD [16+EBP]
    67 00000061 FF 75 0C                        	PUSH	DWORD [12+EBP]
    68 00000064 FF 75 08                        	PUSH	DWORD [8+EBP]
    69 00000067 6A 00                           	PUSH	0
    70 00000069 E8 FFFFFF92                     	CALL	_corb_enqueue
    71 0000006E 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
    72 00000074 89 C1                           	MOV	ECX,EAX
    73 00000076 83 C4 10                        	ADD	ESP,16
    74 00000079                                 L4:
    75 00000079 8A 42 5D                        	MOV	AL,BYTE [93+EDX]
    76 0000007C 83 E0 01                        	AND	EAX,1
    77 0000007F 84 C0                           	TEST	AL,AL
    78 00000081 74 F6                           	JE	L4
    79 00000083 8A 42 5D                        	MOV	AL,BYTE [93+EDX]
    80 00000086 83 E0 05                        	AND	EAX,5
    81 00000089 88 42 5D                        	MOV	BYTE [93+EDX],AL
    82 0000008C 89 4D 08                        	MOV	DWORD [8+EBP],ECX
    83 0000008F C9                              	LEAVE
    84 00000090 EB B8                           	JMP	_rirb_data
    85 00000092                                 	GLOBAL	_init_corb
    86 00000092                                 _init_corb:
    87 00000092 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
    88 00000098 55                              	PUSH	EBP
    89 00000099 89 E5                           	MOV	EBP,ESP
    90 0000009B 8A 42 4C                        	MOV	AL,BYTE [76+EDX]
    91 0000009E 83 C8 FD                        	OR	EAX,-3
    92 000000A1 88 42 4C                        	MOV	BYTE [76+EDX],AL
    93 000000A4 68 00001000                     	PUSH	4096
    94 000000A9 FF 75 08                        	PUSH	DWORD [8+EBP]
    95 000000AC C7 05 [00000048] 00000100       	MOV	DWORD [_corb_num_entries],256
    96 000000B6 E8 [00000000]                   	CALL	_memman_alloc_4k
    97 000000BB 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
    98 000000C1 A3 [00000050]                   	MOV	DWORD [_corb_buffer],EAX
    99 000000C6 89 42 40                        	MOV	DWORD [64+EDX],EAX
   100 000000C9 C1 E8 1F                        	SHR	EAX,31
   101 000000CC 89 42 44                        	MOV	DWORD [68+EDX],EAX
   102 000000CF 66 C7 42 48 0000                	MOV	WORD [72+EDX],0
   103 000000D5 66 8B 42 4A                     	MOV	AX,WORD [74+EDX]
   104 000000D9 66 0D 8000                      	OR	AX,-32768
   105 000000DD 66 89 42 4A                     	MOV	WORD [74+EDX],AX
   106 000000E1 66 C7 42 4A 0000                	MOV	WORD [74+EDX],0
   107 000000E7 8A 42 4C                        	MOV	AL,BYTE [76+EDX]
   108 000000EA 83 C8 02                        	OR	EAX,2
   109 000000ED 88 42 4C                        	MOV	BYTE [76+EDX],AL
   110 000000F0 C9                              	LEAVE
   111 000000F1 C3                              	RET
   112 000000F2                                 	GLOBAL	_init_rirb
   113 000000F2                                 _init_rirb:
   114 000000F2 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   115 000000F8 55                              	PUSH	EBP
   116 000000F9 89 E5                           	MOV	EBP,ESP
   117 000000FB 8A 42 5C                        	MOV	AL,BYTE [92+EDX]
   118 000000FE 83 C8 FD                        	OR	EAX,-3
   119 00000101 88 42 5C                        	MOV	BYTE [92+EDX],AL
   120 00000104 68 00001000                     	PUSH	4096
   121 00000109 FF 75 08                        	PUSH	DWORD [8+EBP]
   122 0000010C C7 05 [0000004C] 00000100       	MOV	DWORD [_rirb_num_entries],256
   123 00000116 E8 [00000000]                   	CALL	_memman_alloc_4k
   124 0000011B 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   125 00000121 A3 [00000054]                   	MOV	DWORD [_rirb_buffer],EAX
   126 00000126 89 42 50                        	MOV	DWORD [80+EDX],EAX
   127 00000129 C1 E8 1F                        	SHR	EAX,31
   128 0000012C 89 42 54                        	MOV	DWORD [84+EDX],EAX
   129 0000012F 66 8B 42 58                     	MOV	AX,WORD [88+EDX]
   130 00000133 66 0D 8000                      	OR	AX,-32768
   131 00000137 66 89 42 58                     	MOV	WORD [88+EDX],AX
   132 0000013B 66 C7 42 58 0000                	MOV	WORD [88+EDX],0
   133 00000141 66 8B 42 5A                     	MOV	AX,WORD [90+EDX]
   134 00000145 83 C8 01                        	OR	EAX,1
   135 00000148 66 89 42 5A                     	MOV	WORD [90+EDX],AX
   136 0000014C 8A 42 5C                        	MOV	AL,BYTE [92+EDX]
   137 0000014F 83 C8 02                        	OR	EAX,2
   138 00000152 88 42 5C                        	MOV	BYTE [92+EDX],AL
   139 00000155 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   140 0000015B 8A 42 5C                        	MOV	AL,BYTE [92+EDX]
   141 0000015E 83 C8 01                        	OR	EAX,1
   142 00000161 88 42 5C                        	MOV	BYTE [92+EDX],AL
   143 00000164 C9                              	LEAVE
   144 00000165 C3                              	RET
   145 00000166                                 _look_for_node:
   146 00000166 55                              	PUSH	EBP
   147 00000167 89 E5                           	MOV	EBP,ESP
   148 00000169 57                              	PUSH	EDI
   149 0000016A 56                              	PUSH	ESI
   150 0000016B 53                              	PUSH	EBX
   151 0000016C 53                              	PUSH	EBX
   152 0000016D 53                              	PUSH	EBX
   153 0000016E 6A 04                           	PUSH	4
   154 00000170 8A 45 0C                        	MOV	AL,BYTE [12+EBP]
   155 00000173 68 00000F00                     	PUSH	3840
   156 00000178 88 45 F3                        	MOV	BYTE [-13+EBP],AL
   157 0000017B 0F B6 45 08                     	MOVZX	EAX,BYTE [8+EBP]
   158 0000017F 50                              	PUSH	EAX
   159 00000180 E8 FFFFFED6                     	CALL	_run_command
   160 00000185 83 C4 0C                        	ADD	ESP,12
   161 00000188 89 C2                           	MOV	EDX,EAX
   162 0000018A 89 C7                           	MOV	EDI,EAX
   163 0000018C C1 EA 10                        	SHR	EDX,16
   164 0000018F 81 E2 000000FF                  	AND	EDX,255
   165 00000195 89 55 EC                        	MOV	DWORD [-20+EBP],EDX
   166 00000198 83 CA FF                        	OR	EDX,-1
   167 0000019B 81 E7 000000FF                  	AND	EDI,255
   168 000001A1 74 09                           	JE	L9
   169 000001A3 31 F6                           	XOR	ESI,ESI
   170 000001A5 39 FE                           	CMP	ESI,EDI
   171 000001A7 72 0D                           	JB	L17
   172 000001A9                                 L19:
   173 000001A9 83 CA FF                        	OR	EDX,-1
   174 000001AC                                 L9:
   175 000001AC 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   176 000001AF 89 D0                           	MOV	EAX,EDX
   177 000001B1 5B                              	POP	EBX
   178 000001B2 5E                              	POP	ESI
   179 000001B3 5F                              	POP	EDI
   180 000001B4 5D                              	POP	EBP
   181 000001B5 C3                              	RET
   182 000001B6                                 L17:
   183 000001B6 6A 09                           	PUSH	9
   184 000001B8 8B 5D EC                        	MOV	EBX,DWORD [-20+EBP]
   185 000001BB 68 00000F00                     	PUSH	3840
   186 000001C0 01 F3                           	ADD	EBX,ESI
   187 000001C2 53                              	PUSH	EBX
   188 000001C3 E8 FFFFFE93                     	CALL	_run_command
   189 000001C8 83 C4 0C                        	ADD	ESP,12
   190 000001CB C1 E8 14                        	SHR	EAX,20
   191 000001CE 83 E0 0F                        	AND	EAX,15
   192 000001D1 3A 45 F3                        	CMP	AL,BYTE [-13+EBP]
   193 000001D4 74 24                           	JE	L20
   194 000001D6 0F B6 45 F3                     	MOVZX	EAX,BYTE [-13+EBP]
   195 000001DA 50                              	PUSH	EAX
   196 000001DB 8A 45 EC                        	MOV	AL,BYTE [-20+EBP]
   197 000001DE 01 F0                           	ADD	EAX,ESI
   198 000001E0 0F B6 C0                        	MOVZX	EAX,AL
   199 000001E3 50                              	PUSH	EAX
   200 000001E4 E8 FFFFFF7D                     	CALL	_look_for_node
   201 000001E9 5A                              	POP	EDX
   202 000001EA 59                              	POP	ECX
   203 000001EB 85 C0                           	TEST	EAX,EAX
   204 000001ED 79 07                           	JNS	L21
   205 000001EF 46                              	INC	ESI
   206 000001F0 39 FE                           	CMP	ESI,EDI
   207 000001F2 72 C2                           	JB	L17
   208 000001F4 EB B3                           	JMP	L19
   209 000001F6                                 L21:
   210 000001F6 89 C2                           	MOV	EDX,EAX
   211 000001F8 EB B2                           	JMP	L9
   212 000001FA                                 L20:
   213 000001FA 89 DA                           	MOV	EDX,EBX
   214 000001FC EB AE                           	JMP	L9
   215                                          [SECTION .data]
   216 00000010                                 LC0:
   217 00000010 67 63 61 70 3A 20 25 78 00      	DB	"gcap: %x",0x00
   218 00000019                                 LC1:
   219 00000019 43 4F 52 42 53 49 5A 45 3A 20   	DB	"CORBSIZE: %x",0x00
       00000023 25 78 00 
   220 00000026                                 LC2:
   221 00000026 52 49 52 42 53 49 5A 45 3A 20   	DB	"RIRBSIZE: %x",0x00
       00000030 25 78 00 
   222 00000033                                 LC3:
   223 00000033 6D 65 6D 6F 72 79 20 73 69 7A   	DB	"memory size: %dKB",0x00
       0000003D 65 3A 20 25 64 4B 42 00 
   224                                          [SECTION .text]
   225 000001FE                                 	GLOBAL	_hdaudio_test
   226 000001FE                                 _hdaudio_test:
   227 000001FE 55                              	PUSH	EBP
   228 000001FF 89 E5                           	MOV	EBP,ESP
   229 00000201 56                              	PUSH	ESI
   230 00000202 53                              	PUSH	EBX
   231 00000203 83 C4 80                        	ADD	ESP,-128
   232 00000206 8D 9D FFFFFF78                  	LEA	EBX,DWORD [-136+EBP]
   233 0000020C 8B 15 [00000000]                	MOV	EDX,DWORD [_mmio]
   234 00000212 8B 75 08                        	MOV	ESI,DWORD [8+EBP]
   235 00000215 66 8B 02                        	MOV	AX,WORD [EDX]
   236 00000218 66 C1 E8 08                     	SHR	AX,8
   237 0000021C 83 E0 0F                        	AND	EAX,15
   238 0000021F A3 [00000058]                   	MOV	DWORD [_iss],EAX
   239 00000224 66 8B 02                        	MOV	AX,WORD [EDX]
   240 00000227 66 C1 E8 0C                     	SHR	AX,12
   241 0000022B 0F B7 C0                        	MOVZX	EAX,AX
   242 0000022E A3 [0000005C]                   	MOV	DWORD [_oss],EAX
   243 00000233 66 8B 02                        	MOV	AX,WORD [EDX]
   244 00000236 0F B7 C0                        	MOVZX	EAX,AX
   245 00000239 50                              	PUSH	EAX
   246 0000023A 68 [00000010]                   	PUSH	LC0
   247 0000023F 53                              	PUSH	EBX
   248 00000240 E8 [00000000]                   	CALL	_sprintf
   249 00000245 53                              	PUSH	EBX
   250 00000246 6A 07                           	PUSH	7
   251 00000248 68 00000140                     	PUSH	320
   252 0000024D 6A 64                           	PUSH	100
   253 0000024F 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   254 00000253 50                              	PUSH	EAX
   255 00000254 FF 76 08                        	PUSH	DWORD [8+ESI]
   256 00000257 E8 [00000000]                   	CALL	_putfonts8_asc
   257 0000025C A1 [00000000]                   	MOV	EAX,DWORD [_mmio]
   258 00000261 83 C4 24                        	ADD	ESP,36
   259 00000264 8A 40 4E                        	MOV	AL,BYTE [78+EAX]
   260 00000267 0F B6 C0                        	MOVZX	EAX,AL
   261 0000026A 50                              	PUSH	EAX
   262 0000026B 68 [00000019]                   	PUSH	LC1
   263 00000270 53                              	PUSH	EBX
   264 00000271 E8 [00000000]                   	CALL	_sprintf
   265 00000276 53                              	PUSH	EBX
   266 00000277 6A 07                           	PUSH	7
   267 00000279 68 00000154                     	PUSH	340
   268 0000027E 6A 64                           	PUSH	100
   269 00000280 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   270 00000284 50                              	PUSH	EAX
   271 00000285 FF 76 08                        	PUSH	DWORD [8+ESI]
   272 00000288 E8 [00000000]                   	CALL	_putfonts8_asc
   273 0000028D A1 [00000000]                   	MOV	EAX,DWORD [_mmio]
   274 00000292 83 C4 24                        	ADD	ESP,36
   275 00000295 8A 40 5E                        	MOV	AL,BYTE [94+EAX]
   276 00000298 0F B6 C0                        	MOVZX	EAX,AL
   277 0000029B 50                              	PUSH	EAX
   278 0000029C 68 [00000026]                   	PUSH	LC2
   279 000002A1 53                              	PUSH	EBX
   280 000002A2 E8 [00000000]                   	CALL	_sprintf
   281 000002A7 53                              	PUSH	EBX
   282 000002A8 6A 07                           	PUSH	7
   283 000002AA 68 00000168                     	PUSH	360
   284 000002AF 6A 64                           	PUSH	100
   285 000002B1 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   286 000002B5 50                              	PUSH	EAX
   287 000002B6 FF 76 08                        	PUSH	DWORD [8+ESI]
   288 000002B9 E8 [00000000]                   	CALL	_putfonts8_asc
   289 000002BE 83 C4 24                        	ADD	ESP,36
   290 000002C1 68 00001000                     	PUSH	4096
   291 000002C6 FF 75 0C                        	PUSH	DWORD [12+EBP]
   292 000002C9 E8 [00000000]                   	CALL	_memman_alloc_4k
   293 000002CE 6A 04                           	PUSH	4
   294 000002D0 68 [00000033]                   	PUSH	LC3
   295 000002D5 53                              	PUSH	EBX
   296 000002D6 E8 [00000000]                   	CALL	_sprintf
   297 000002DB 53                              	PUSH	EBX
   298 000002DC 6A 07                           	PUSH	7
   299 000002DE 68 00000190                     	PUSH	400
   300 000002E3 6A 64                           	PUSH	100
   301 000002E5 0F BF 46 04                     	MOVSX	EAX,WORD [4+ESI]
   302 000002E9 50                              	PUSH	EAX
   303 000002EA FF 76 08                        	PUSH	DWORD [8+ESI]
   304 000002ED E8 [00000000]                   	CALL	_putfonts8_asc
   305 000002F2 8D 65 F8                        	LEA	ESP,DWORD [-8+EBP]
   306 000002F5 5B                              	POP	EBX
   307 000002F6 5E                              	POP	ESI
   308 000002F7 5D                              	POP	EBP
   309 000002F8 C3                              	RET
   310                                          [SECTION .data]
   311 00000045 00 00 00                        	ALIGNB	4
   312 00000048                                 _corb_num_entries:
   313 00000048 00 00 00 00                     	RESB	4
   314                                          [SECTION .data]
   315 0000004C                                 	ALIGNB	4
   316 0000004C                                 _rirb_num_entries:
   317 0000004C 00 00 00 00                     	RESB	4
   318                                          [SECTION .data]
   319 00000050                                 	ALIGNB	4
   320 00000050                                 _corb_buffer:
   321 00000050 00 00 00 00                     	RESB	4
   322                                          [SECTION .data]
   323 00000054                                 	ALIGNB	4
   324 00000054                                 _rirb_buffer:
   325 00000054 00 00 00 00                     	RESB	4
   326                                          [SECTION .data]
   327 00000058                                 	ALIGNB	4
   328 00000058                                 _iss:
   329 00000058 00 00 00 00                     	RESB	4
   330                                          [SECTION .data]
   331 0000005C                                 	ALIGNB	4
   332 0000005C                                 _oss:
   333 0000005C 00 00 00 00                     	RESB	4
